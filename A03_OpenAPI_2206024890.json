[
  {
    "swagger": "2.0",
    "info": {
      "title": "Authentication Microservice API",
      "version": "1.0.0",
      "description": "API documentation for the Authentication Microservice"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "schemes": ["http"],
    "definitions": {
      "User": {
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "username",
          "email",
          "password",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string",
            "maxLength": 256
          },
          "email": {
            "type": "string",
            "maxLength": 256
          },
          "password": {
            "type": "string",
            "maxLength": 256
          },
          "full_name": {
            "type": "string",
            "maxLength": 256
          },
          "address": {
            "type": "string"
          },
          "phone_number": {
            "type": "string",
            "maxLength": 256
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "integer"
          }
        }
      }
    },
    "paths": {
      "/v2/users/register": {
        "post": {
          "tags": ["Users"],
          "summary": "Register a new user",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "user",
              "description": "User registration data",
              "required": true,
              "schema": {
                "type": "object",
                "required": ["username", "email", "password"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully registered",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/User"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "409": {
              "description": "Conflict - user already exists",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/v2/auth/login": {
        "post": {
          "tags": ["Auth"],
          "summary": "Log in a user",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "credentials",
              "description": "User login credentials",
              "required": true,
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Login successful",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string"
                      }
                    }
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "404": {
              "description": "Invalid credentials",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/v2/auth/verify": {
        "post": {
          "tags": ["Auth"],
          "summary": "Verify a user token",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "token",
              "description": "Token to verify",
              "required": true,
              "schema": {
                "type": "object",
                "required": ["token"],
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Token is valid",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/User"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/v2/auth/verify-admin": {
        "post": {
          "tags": ["Auth"],
          "summary": "Verify an admin token",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "token",
              "description": "Admin token to verify",
              "required": true,
              "schema": {
                "type": "object",
                "required": ["token"],
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Admin token is valid",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/User"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "securityDefinitions": {},
    "tags": []
  },

  {
    "swagger": "2.0",
    "info": {
      "title": "Orders Microservice API",
      "version": "1.0.0",
      "description": "API documentation for Order and Cart endpoints"
    },
    "host": "localhost:8001",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "definitions": {
      "Order": {
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "user_id",
          "order_date",
          "total_amount",
          "order_status",
          "shipping_provider"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "total_amount": {
            "type": "integer"
          },
          "order_status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PAID",
              "CANCELLED",
              "REFUNDED"
            ]
          },
          "shipping_provider": {
            "type": "string",
            "enum": [
              "JNE",
              "TIKI",
              "SICEPAT",
              "GOSEND",
              "GRAB_EXPRESS"
            ]
          },
          "shipping_code": {
            "type": "string"
          },
          "shipping_status": {
            "type": "string",
            "enum": [
              "PENDING",
              "SHIPPED",
              "DELIVERED",
              "RETURNED"
            ]
          }
        }
      },
      "OrderDetail": {
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "order_id",
          "product_id",
          "quantity",
          "unit_price"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid"
          },
          "order_id": {
            "type": "string",
            "format": "uuid"
          },
          "product_id": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer"
          },
          "unit_price": {
            "type": "integer"
          }
        }
      },
      "CartItem": {
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "user_id",
          "product_id",
          "quantity"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "product_id": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "Payment": {
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "order_id",
          "payment_date",
          "payment_method",
          "payment_reference",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid"
          },
          "order_id": {
            "type": "string",
            "format": "uuid"
          },
          "payment_date": {
            "type": "string",
            "format": "date-time"
          },
          "payment_method": {
            "type": "string"
          },
          "payment_reference": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "integer"
          }
        }
      }
    },
    "paths": {
      "/order": {
        "get": {
          "tags": [
            "Order"
          ],
          "summary": "Get all orders for authenticated user",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "List of orders placed by the user",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Order"
                }
              }
            },
            "500": {
              "description": "Internal server error while fetching orders",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "post": {
          "tags": [
            "Order"
          ],
          "summary": "Place a new order",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "body",
              "name": "shipping",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "shipping_provider"
                ],
                "properties": {
                  "shipping_provider": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Order placed successfully",
              "schema": {
                "$ref": "#/definitions/Order"
              }
            },
            "400": {
              "description": "Invalid shipping provider or empty cart",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Server error during order placement",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/order/{orderId}": {
        "get": {
          "tags": [
            "Order"
          ],
          "summary": "Get order detail by ID",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "orderId",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Order details retrieved successfully",
              "schema": {
                "$ref": "#/definitions/OrderDetail"
              }
            },
            "401": {
              "description": "You are not authorized to view this order",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "404": {
              "description": "Order with the specified ID was not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/order/{orderId}/pay": {
        "post": {
          "tags": [
            "Order"
          ],
          "summary": "Pay for an order",
          "parameters": [
            {
              "in": "path",
              "name": "orderId",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "payment",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "payment_method",
                  "payment_reference",
                  "amount"
                ],
                "properties": {
                  "payment_method": {
                    "type": "string"
                  },
                  "payment_reference": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Payment processed successfully",
              "schema": {
                "$ref": "#/definitions/Payment"
              }
            },
            "400": {
              "description": "Payment amount does not match order total or is invalid",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Error while processing payment",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/order/{orderId}/cancel": {
        "post": {
          "tags": [
            "Order"
          ],
          "summary": "Cancel an order",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "orderId",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Order canceled successfully",
              "schema": {
                "$ref": "#/definitions/Order"
              }
            },
            "401": {
              "description": "You are not authorized to cancel this order",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "404": {
              "description": "Order not found or already canceled",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Error while canceling the order",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/cart": {
        "get": {
          "tags": [
            "Cart"
          ],
          "summary": "Get all items in cart",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Cart items retrieved successfully",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/CartItem"
                }
              }
            },
            "404": {
              "description": "No cart items found for this user",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error while fetching cart",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "post": {
          "tags": [
            "Cart"
          ],
          "summary": "Add item to cart",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "body",
              "name": "item",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "product_id",
                  "quantity"
                ],
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Item successfully added to cart",
              "schema": {
                "$ref": "#/definitions/CartItem"
              }
            },
            "404": {
              "description": "User or product not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Error while adding item to cart",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "put": {
          "tags": [
            "Cart"
          ],
          "summary": "Edit cart item quantity",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "body",
              "name": "item",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "cart_id"
                ],
                "properties": {
                  "cart_id": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Cart item updated successfully",
              "schema": {
                "$ref": "#/definitions/CartItem"
              }
            },
            "500": {
              "description": "Failed to update cart item",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Cart"
          ],
          "summary": "Delete item from cart by product ID",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "body",
              "name": "item",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "product_id"
                ],
                "properties": {
                  "product_id": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Item removed from cart",
              "schema": {
                "$ref": "#/definitions/CartItem"
              }
            },
            "404": {
              "description": "Item not found in cart",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Failed to remove item from cart",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "responses": {
  
    },
    "parameters": {
  
    },
    "securityDefinitions": {
  
    },
    "tags": []
  },

  {
    "swagger": "2.0",
    "info": {
      "title": "Products Microservice API",
      "version": "1.0.0",
      "description": "API documentation for the Products Microservice"
    },
    "host": "localhost:8002",
    "basePath": "/",
    "schemes": ["http"],
    "definitions": {
      "Product": {
        "type": "object",
        "required": ["id", "tenant_id", "name", "price", "quantity_available"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "quantity_available": {
            "type": "integer"
          },
          "category_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Category": {
        "type": "object",
        "required": ["id", "tenant_id", "name"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "integer"
          }
        }
      }
    },
    "paths": {
      "/v2/product": {
        "get": {
          "tags": ["Products"],
          "summary": "Get all products",
          "responses": {
            "200": {
              "description": "List of products",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "products": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/Product"
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "post": {
          "tags": ["Products"],
          "summary": "Create a product",
          "consumes": ["application/json"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "body",
              "name": "product",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Product"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Product created",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Product"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "409": {
              "description": "Product already exists",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/v2/product/category": {
        "get": {
          "tags": ["Categories"],
          "summary": "Get all categories",
          "responses": {
            "200": {
              "description": "List of categories",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/Category"
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "post": {
          "tags": ["Categories"],
          "summary": "Create a category",
          "consumes": ["application/json"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "body",
              "name": "category",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Category"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Category created",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Category"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "409": {
              "description": "Category already exists",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/v2/product/{id}": {
        "get": {
          "tags": ["Products"],
          "summary": "Get product by ID",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Product found",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Product"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "404": {
              "description": "Product not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "put": {
          "tags": ["Products"],
          "summary": "Edit a product",
          "consumes": ["application/json"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "product",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Product"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Product updated",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Product"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "404": {
              "description": "Product not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "delete": {
          "tags": ["Products"],
          "summary": "Delete a product",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Product deleted",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Product"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "404": {
              "description": "Product not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/v2/product/many": {
        "post": {
          "tags": ["Products"],
          "summary": "Get many products by IDs",
          "consumes": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "ids",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of products",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Product"
                    }
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid or missing product IDs",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/v2/product/category/{category_id}": {
        "get": {
          "tags": ["Products"],
          "summary": "Get products by category",
          "parameters": [
            {
              "in": "path",
              "name": "category_id",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Products in category",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "products": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/Product"
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "404": {
              "description": "No products found for this category",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "put": {
          "tags": ["Categories"],
          "summary": "Edit a category",
          "consumes": ["application/json"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "category_id",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "category",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Category"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Category updated",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Category"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "404": {
              "description": "Category not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "delete": {
          "tags": ["Categories"],
          "summary": "Delete a category",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "category_id",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Category deleted",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Category"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "404": {
              "description": "Category not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "securityDefinitions": {},
    "tags": []
  },

  {
    "swagger": "2.0",
    "info": {
      "title": "Tenant Microservice API",
      "version": "1.0.0",
      "description": "API documentation for the Tenant Microservice"
    },
    "host": "localhost:8003",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "securityDefinitions": {
      "bearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Enter your bearer token in the format **Bearer &lt;token&gt;**"
      }
    },
    "definitions": {
      "Tenant": {
        "type": "object",
        "required": [
          "id",
          "owner_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TenantDetail": {
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "integer"
          }
        }
      }
    },
    "paths": {
      "/tenant/{tenant_id}": {
        "get": {
          "tags": [
            "Tenants"
          ],
          "summary": "Get tenant by ID",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "tenant_id",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Tenant found",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "tenants": {
                        "$ref": "#/definitions/Tenant"
                      },
                      "tenantDetails": {
                        "$ref": "#/definitions/TenantDetail"
                      }
                    }
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "404": {
              "description": "Tenant not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/tenant": {
        "post": {
          "tags": [
            "Tenants"
          ],
          "summary": "Create a new tenant",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "tenant",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "owner_id",
                  "name"
                ],
                "properties": {
                  "owner_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Tenant created",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Tenant"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Tenants"
          ],
          "summary": "Delete a tenant",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "tenant",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "tenant_id"
                ],
                "properties": {
                  "tenant_id": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Tenant deleted",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Tenant"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized to delete this tenant",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "404": {
              "description": "Tenant not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/tenant/{old_tenant_id}": {
        "put": {
          "tags": [
            "Tenants"
          ],
          "summary": "Edit a tenant",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "old_tenant_id",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "tenant",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "tenant_id": {
                    "type": "string"
                  },
                  "owner_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Tenant updated",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Tenant"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized to edit this tenant",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "404": {
              "description": "Tenant not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "responses": {
  
    },
    "parameters": {
  
    },
    "tags": []
  },

  {
    "swagger": "2.0",
    "info": {
      "title": "Wishlist Microservice API",
      "version": "1.0.0",
      "description": "API documentation for the Wishlist Microservice"
    },
    "host": "localhost:8004",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "securityDefinitions": {
      "bearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Enter your bearer token in the format **Bearer &lt;token&gt;**"
      }
    },
    "definitions": {
      "Wishlist": {
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "user_id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "WishlistDetail": {
        "type": "object",
        "required": [
          "id",
          "wishlist_id",
          "product_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "wishlist_id": {
            "type": "string",
            "format": "uuid"
          },
          "product_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "integer"
          }
        }
      }
    },
    "paths": {
      "/api/wishlist": {
        "get": {
          "tags": [
            "Wishlist"
          ],
          "summary": "Get all wishlists for the authenticated user",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Wishlists fetched successfully",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Wishlist"
                    }
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "404": {
              "description": "User ID is missing",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "post": {
          "tags": [
            "Wishlist"
          ],
          "summary": "Create a new wishlist",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "body",
              "name": "wishlist",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Wishlist created successfully",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Wishlist"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/api/wishlist/{id}": {
        "get": {
          "tags": [
            "Wishlist"
          ],
          "summary": "Get wishlist details by ID",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "required": true,
              "description": "Wishlist ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Wishlist detail found",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/WishlistDetail"
                    }
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized access",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "404": {
              "description": "Wishlist not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "put": {
          "tags": [
            "Wishlist"
          ],
          "summary": "Update a wishlist's name",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "required": true
            },
            {
              "in": "body",
              "name": "name",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Wishlist updated successfully",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Wishlist"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Wishlist"
          ],
          "summary": "Delete wishlist by ID",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Wishlist deleted successfully",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/Wishlist"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/api/wishlist/remove": {
        "delete": {
          "tags": [
            "Wishlist"
          ],
          "summary": "Remove a product from wishlist",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "body",
              "name": "wishlistDetail",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "WishlistDetail ID"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Product removed successfully",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/WishlistDetail"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/api/wishlist/add": {
        "post": {
          "tags": [
            "Wishlist"
          ],
          "summary": "Add product to wishlist",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "body",
              "name": "product",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "wishlist_id",
                  "product_id"
                ],
                "properties": {
                  "wishlist_id": {
                    "type": "string"
                  },
                  "product_id": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Product added to wishlist",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/definitions/WishlistDetail"
                  },
                  "status": {
                    "type": "integer"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized to add product",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Server error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "responses": {
  
    },
    "parameters": {
  
    },
    "tags": []
  }
]